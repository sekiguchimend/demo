// components/CameraControls.js - „Ç´„É°„É©„Ç≥„É≥„Éà„É≠„Éº„É´„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
import React from 'react';
import { Camera, FlipHorizontal, Zap, RefreshCw, Settings } from 'lucide-react';

const CameraControls = ({ 
  isCapturing,
  onCapture, 
  onSwitchCamera, 
  onToggleFilters,
  showFilters,
  filters,
  gradientFilter,
  selectedPreset,
  filterPresets,
  onApplyPreset,
  onFilterChange,
  onGradientChange,
  onResetFilters
}) => {
  return (
    <>
      {/* „Ç´„É°„É©Êìç‰Ωú„Éú„Çø„É≥ */}
      {isCapturing && (
        <div className="absolute bottom-6 left-0 right-0 flex justify-center gap-8 items-center">
          <button 
            onClick={onSwitchCamera} 
            className="bg-black bg-opacity-60 text-white p-3 rounded-full shadow-lg backdrop-blur-sm camera-btn"
            aria-label="„Ç´„É°„É©„ÇíÂàá„ÇäÊõø„Åà"
          >
            <FlipHorizontal size={24} />
          </button>
          <button 
            onClick={onCapture} 
            className="relative bg-white p-1 rounded-full shadow-lg camera-btn"
            aria-label="ÂÜôÁúü„ÇíÊíÆÂΩ±"
          >
            <div className="h-16 w-16 rounded-full border-4 border-white flex items-center justify-center">
              <div className="h-14 w-14 rounded-full bg-gradient-to-br from-purple-500 to-indigo-600"></div>
            </div>
            <div className="absolute inset-0 bg-white bg-opacity-20 rounded-full animate-pulse" style={{ animationDuration: '2s' }}></div>
          </button>
          <button 
            onClick={onToggleFilters} 
            className="bg-black bg-opacity-60 text-white p-3 rounded-full shadow-lg backdrop-blur-sm camera-btn"
            aria-label="„Éï„Ç£„É´„Çø„ÉºË®≠ÂÆö„ÇíË°®Á§∫"
          >
            <Zap size={24} />
          </button>
        </div>
      )}

      {/* „Éï„Ç£„É´„Çø„ÉºË®≠ÂÆö„Éë„Éç„É´ */}
      {showFilters && (
        <div className="fixed bottom-0 left-0 right-0 bg-black bg-opacity-90 text-white p-4 rounded-t-2xl z-20 max-h-[70vh] overflow-y-auto filter-panel">
          <div className="max-w-screen-md mx-auto">
            <div className="flex items-center justify-between mb-5">
              <h2 className="text-lg font-semibold flex items-center gap-2">
                <Settings size={20} className="text-purple-400" />
                „Éï„Ç£„É´„Çø„ÉºË®≠ÂÆö
              </h2>
              <button 
                onClick={onResetFilters}
                className="text-purple-400 flex items-center gap-1 hover:text-purple-300 transition"
                aria-label="„Éï„Ç£„É´„Çø„Éº„Çí„É™„Çª„ÉÉ„Éà"
              >
                <RefreshCw size={16} />
                „É™„Çª„ÉÉ„Éà
              </button>
            </div>
            
            {/* „Éï„Ç£„É´„Çø„Éº„Éó„É™„Çª„ÉÉ„Éà */}
            <div className="mb-6">
              <h3 className="text-sm font-medium mb-3 flex items-center gap-2 text-gray-300">
                <Zap size={16} className="text-purple-400" />
                „Éï„Ç£„É´„Çø„Éº„Éó„É™„Çª„ÉÉ„Éà
              </h3>
              <div className="grid grid-cols-2 sm:grid-cols-3 gap-2">
                {filterPresets.map((preset) => (
                  <button
                    key={preset.name}
                    onClick={() => onApplyPreset(preset)}
                    className={`p-3 text-sm rounded-lg border ${selectedPreset === preset.name ? 'bg-purple-700 border-purple-500' : 'bg-gray-900 border-gray-800'} transition-all`}
                  >
                    <span className="mr-2 text-lg">{preset.icon}</span> {preset.name}
                  </button>
                ))}
              </div>
            </div>
            
            {/* „Ç∞„É©„Éá„Éº„Ç∑„Éß„É≥„Éï„Ç£„É´„Çø„Éº */}
            <div className="mb-6">
              <h3 className="text-sm font-medium mb-3 flex items-center gap-2 text-gray-300">
                <Zap size={16} className="text-purple-400" />
                „Ç∞„É©„Éá„Éº„Ç∑„Éß„É≥„Éï„Ç£„É´„Çø„Éº
              </h3>
              <div className="grid grid-cols-2 sm:grid-cols-3 gap-2">
                <button 
                  onClick={() => onGradientChange('none')}
                  className={`p-3 text-sm rounded-lg border ${gradientFilter === 'none' ? 'bg-purple-700 border-purple-500' : 'bg-gray-900 border-gray-800'} transition-all`}
                >
                  „Å™„Åó
                </button>
                <button 
                  onClick={() => onGradientChange('rainbow')}
                  className={`p-3 text-sm rounded-lg border ${gradientFilter === 'rainbow' ? 'bg-purple-700 border-purple-500' : 'bg-gray-900 border-gray-800'} transition-all`}
                >
                  üåà „É¨„Ç§„É≥„Éú„Éº
                </button>
                <button 
                  onClick={() => onGradientChange('sunset')}
                  className={`p-3 text-sm rounded-lg border ${gradientFilter === 'sunset' ? 'bg-purple-700 border-purple-500' : 'bg-gray-900 border-gray-800'} transition-all`}
                >
                  üåÖ „Çµ„É≥„Çª„ÉÉ„Éà
                </button>
                <button 
                  onClick={() => onGradientChange('neon')}
                  className={`p-3 text-sm rounded-lg border ${gradientFilter === 'neon' ? 'bg-purple-700 border-purple-500' : 'bg-gray-900 border-gray-800'} transition-all`}
                >
                  ‚ú® „Éç„Ç™„É≥
                </button>
                <button 
                  onClick={() => onGradientChange('cool')}
                  className={`p-3 text-sm rounded-lg border ${gradientFilter === 'cool' ? 'bg-purple-700 border-purple-500' : 'bg-gray-900 border-gray-800'} transition-all`}
                >
                  ‚ùÑÔ∏è „ÇØ„Éº„É´
                </button>
                <button 
                  onClick={() => onGradientChange('warm')}
                  className={`p-3 text-sm rounded-lg border ${gradientFilter === 'warm' ? 'bg-purple-700 border-purple-500' : 'bg-gray-900 border-gray-800'} transition-all`}
                >
                  üî• „Ç¶„Ç©„Éº„É†
                </button>
              </div>
            </div>
            
            {/* Ë©≥Á¥∞Ë™øÊï¥„Çπ„É©„Ç§„ÉÄ„Éº */}
            <div className="space-y-5">
              <h3 className="text-sm font-medium mb-3 flex items-center gap-2 text-gray-300">
                <Settings size={16} className="text-purple-400" />
                Ë©≥Á¥∞Ë™øÊï¥
              </h3>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>Êòé„Çã„Åï</span>
                  <span className="text-purple-400">{filters.brightness}%</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="200" 
                  value={filters.brightness} 
                  onChange={(e) => onFilterChange('brightness', e.target.value)}
                  className="w-full"
                  aria-label="Êòé„Çã„Åï„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>„Ç≥„É≥„Éà„É©„Çπ„Éà</span>
                  <span className="text-purple-400">{filters.contrast}%</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="200" 
                  value={filters.contrast} 
                  onChange={(e) => onFilterChange('contrast', e.target.value)}
                  className="w-full"
                  aria-label="„Ç≥„É≥„Éà„É©„Çπ„Éà„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>ÂΩ©Â∫¶</span>
                  <span className="text-purple-400">{filters.saturate}%</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="200" 
                  value={filters.saturate} 
                  onChange={(e) => onFilterChange('saturate', e.target.value)}
                  className="w-full"
                  aria-label="ÂΩ©Â∫¶„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>„Çª„Éî„Ç¢</span>
                  <span className="text-purple-400">{filters.sepia}%</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="100" 
                  value={filters.sepia} 
                  onChange={(e) => onFilterChange('sepia', e.target.value)}
                  className="w-full"
                  aria-label="„Çª„Éî„Ç¢„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>„Ç∞„É¨„Éº„Çπ„Ç±„Éº„É´</span>
                  <span className="text-purple-400">{filters.grayscale}%</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="100" 
                  value={filters.grayscale} 
                  onChange={(e) => onFilterChange('grayscale', e.target.value)}
                  className="w-full"
                  aria-label="„Ç∞„É¨„Éº„Çπ„Ç±„Éº„É´„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>„Åº„Åã„Åó</span>
                  <span className="text-purple-400">{filters.blur}px</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="10" 
                  value={filters.blur} 
                  onChange={(e) => onFilterChange('blur', e.target.value)}
                  className="w-full"
                  aria-label="„Åº„Åã„Åó„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>Ëâ≤Áõ∏ÂõûËª¢</span>
                  <span className="text-purple-400">{filters.hueRotate}¬∞</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="360" 
                  value={filters.hueRotate} 
                  onChange={(e) => onFilterChange('hueRotate', e.target.value)}
                  className="w-full"
                  aria-label="Ëâ≤Áõ∏ÂõûËª¢„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>„Éç„Ç¨„ÉÜ„Ç£„Éñ</span>
                  <span className="text-purple-400">{filters.invert}%</span>
                </label>
                <input 
                  type="range" 
                  min="0" 
                  max="100" 
                  value={filters.invert} 
                  onChange={(e) => onFilterChange('invert', e.target.value)}
                  className="w-full"
                  aria-label="„Éç„Ç¨„ÉÜ„Ç£„Éñ„ÅÆË™øÊï¥"
                />
              </div>
              
              <div>
                <label className="text-sm font-medium flex justify-between mb-2">
                  <span>‰∏çÈÄèÊòéÂ∫¶</span>
                  <span className="text-purple-400">{filters.opacity}%</span>
                </label>
                <input 
                  type="range" 
                  min="20" 
                  max="100" 
                  value={filters.opacity} 
                  onChange={(e) => onFilterChange('opacity', e.target.value)}
                  className="w-full"
                  aria-label="‰∏çÈÄèÊòéÂ∫¶„ÅÆË™øÊï¥"
                />
              </div>
            </div>
            
            <button 
              onClick={onToggleFilters}
              className="w-full bg-gradient-to-r from-purple-600 to-indigo-600 text-white py-3 rounded-lg mt-8 font-medium camera-btn"
            >
              ÂÆå‰∫Ü
            </button>
          </div>
        </div>
      )}
    </>
  );
};

export default CameraControls;